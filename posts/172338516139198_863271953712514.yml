---
message: |-
  A funny story:

  True story:

  CEO:
  Mohamed, We just discovered that the deadline for the project is next Sunday for the first module to be delivered.

  ME:
  What do you mean discovered? How on earth are we supposed to deliver something to the customer on Sunday, when today is Wednesday night.

  CEO:
  I am depending on you, I am sorry we have no other choice.

  ME:
  We haven't even done requirements gathering. What are we even supposed to develop.

  CEO:
  You know they want an ERP.

  ME:
  Excuse me? we have 3 days to deliver something, exactly what part of the ERP could we possibly deliver in that time from scratch?

  CEO:
  Start with inventory, cause the customer is expecting to open a new warehouse on Sunday.

  ME:
  But we have no idea what his requirements are, no stakeholders, and not a single document even vaguely explaining the requirements.

  CEO (Accusingly):
  Document? Didn't you read the proposal? I sent it to you a week ago.

  ME:
  You mean the 7 page document that said that the business requirements were going to be "generic and configurable"?

  CEO:
  Yes, we can use a workflow and implement any business logic we want.

  ME:
  So what business logic are we required to deliver Sunday?

  CEO:
  The inventory management module

  ME:
  Yeah, exactly what possible functionality can we do in 3 days including the weekend.

  CEO:
  Mohamed, this is exactly the type of attitude I was warned about by the CIO. He says your ideas are too "theoretical" and that you should just start writing code and worry about the requirements later.

  ME:
  Are you really being serious? How on earth do we develop something we haven't even agreed on?

  CEO:
  Just do, Inventory In and out and a report to show the inventory.

  ME:
  What about returns? And who said inventory is just in and out?

  CEO:
  Inventory is easy.

  ME:
  No, Inventory is very complicated business, in fact it is a science. Didn't you read the big inventory book in your business school?

  CEO:
  Don't worry, the business here is simple, and we don't need any "returns"

  ME:
  That is just impossible.

  CEO:
  You know what? I will solve the whole problem now?

  ME:
  How?

  CEO:
  We built an ERP system for a dairy producer 5 years ago, you can just use the inventory module from there and deploy it to the customer.

  ME:
  Firstly, that was 5 years ago in Visual Basic. The customer wants an ASP.NET web portal.

  Secondly, The "ERP" does dairy, this is construction material.

  CEO:
  What is the difference? See, you already complain without even knowing the whole story. Your main problem is that you are too rash and not tactful.

  ME:
  So who can explain to me how a dairy ERP can work at a cement factory?

  CEO:
  The business analyst.

  ME:
  And what about the code.

  CEO:
  I think we have it backed up somewhere. You understand the business and figure out how to use the system. Then read the code and understand it and figure out the changes you need to make.

  ME:
  But the customer is waiting for a system built with ASP.NET, how do I deliver a system in Visual Basic windows forms? even if we forget about the business?

  CEO:
  Use the system as a backend and build a new front end. I am guessing this will save you a lot of time.

  See , when you think business and get out of your technical bubble you can actually get stuff done.

  I leave the rest of the story to your imagination :)
from:
  name: Mohamed Samy
  id: '10160396852830355'
type: status
created_time: '2014-12-18T15:53:22+0000'
updated_time: '2014-12-19T13:57:12+0000'
permalink_url: https://www.facebook.com/groups/egyptian.geeks/permalink/863271953712514/
shares:
  count: 2
id: '172338516139198_863271953712514'
