---
message: "Guys, \nIf you are asked to maintain a project that you didn't write a single
  line of code on before. \nAnd you have a core function that contains about 200 lines
  of code, many conditions, loops and state manipulation. \n. \nWhat's the best way
  to refactor such function? \nThe smart way, not the hard way. \nAny recommend tools
  to visualize, suggest recommendations etc."
from:
  name: Pola Ashraf
  id: '10155173051963199'
type: status
created_time: '2016-02-13T18:38:50+0000'
updated_time: '2016-02-14T12:46:31+0000'
permalink_url: https://www.facebook.com/groups/egyptian.geeks/permalink/1079495752090132/
id: '172338516139198_1079495752090132'
reactions:
  data:
  - id: '10213297665910522'
    name: Bassem Qoulta
    type: LIKE
  paging:
    cursors:
      before: TVRZAMk16YzVNek16TVRveE5EVTFNemc0TnpZAM09qSTFOREE1TmpFMk1UTT0ZD
      after: TVRZAMk16YzVNek16TVRveE5EVTFNemc0TnpZAM09qSTFOREE1TmpFMk1UTT0ZD
comments:
  data:
  - created_time: '2016-02-13T18:43:49+0000'
    from:
      name: Pola Ashraf
      id: '10155173051963199'
    message: "Also what is best way to test that we have the same correct behavior
      after refactoring? \nKnowing that time is critical too :D"
    id: '1079497982089909'
  - created_time: '2016-02-13T19:06:52+0000'
    from:
      name: Hossam Dahshan
      id: '1662257627174822'
    message: If you know what procedure of tasks does that function takes to complete
      its mission, split tasks into functions and test the original functionality,
      as sprints :-D
    id: '1079505092089198'
  - created_time: '2016-02-13T20:18:51+0000'
    from:
      name: Sherif Omar
      id: '10159954581715092'
    message: If it works, don't rewrite it.
    id: '1079535442086163'
  - created_time: '2016-02-13T23:34:24+0000'
    from:
      name: Ahmad Hisham
      id: '10159889607765058'
    message: |-
      Write some unit tests before starting, and don't assert/assume results, but instead read the output of the function on the first run then assert these results in the unit tests.
      This will give you the safety net to refactor after that aggressively and don't take too much time to make sure your refactoring didn't break anything.
    id: '1079594258746948'
  - created_time: '2016-02-14T00:13:21+0000'
    from:
      name: Ahmed Abo Mazin
      id: '1758521440903748'
    message: احبذ الدعاء بجانب ال Unit test =D
    id: '1079604302079277'
  - created_time: '2016-02-14T12:18:29+0000'
    from:
      name: Taha Amin
      id: '10155815529215590'
    message: check this book http://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052
    id: '1079930395380001'
  paging:
    cursors:
      before: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVEEzT1RRNU56azRNakE0T1Rrd09Ub3hORFUxTXpnNU1ETXcZD
      after: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVEEzT1Rrek1ETTVOVE00TURBd01Ub3hORFUxTkRVeU16RXkZD
